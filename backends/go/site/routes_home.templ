package site

import (
	"fmt"
)

templ Home() {
	{{ cdnText := `<script type="module" defer src="https://cdn.jsdelivr.net/npm/@sudodevnull/datastar" ></script>` }}
	@Page() {
		<div class="flex flex-col items-center min-h-screen gap-4 p-16 bg-gradient-to-br from-base-300 to-base-100">
			<div class="flex flex-col items-center max-w-lg gap-8">
				<img
					class="w-24 border-4 rounded-full shadow-xl md:w-96 border-primary"
					src={ staticPath("/images/rocket.png") }
				/>
				<div class="text-4xl font-bold uppercase font-brand md:text-6xl text-primary">Datastar</div>
				<div class="text-center font-brand">
					<div class="text-xl">Real-time hypermedia framework</div>
				</div>
				<p>
					Using a single
					<span class="text-lg font-bold text-primary">{ iifeBuildSize }</span>
					CDN link and have access to everything needed to rival a full-stack SPA framework; all in the language of your choice.
				</p>
				<div class="flex flex-wrap w-full gap-4">
					<a
						class="flex items-center justify-center flex-1 btn btn-secondary"
						href="https://discord.gg/CHvPMrAp6F"
					>
						@icon("simple-icons:discord")
						Join the conversation
					</a>
					<a
						class="flex items-center justify-center flex-1 btn btn-accent"
						href="https://github.com/delaneyj/datastar/tree/main/library/src/lib"
					>
						@icon("simple-icons:github")
						View the source
					</a>
				</div>
				<div class="w-full shadow-xl card bg-base-100">
					<div class="card-body">
						<div class="flex items-center gap-4">
							<button
								class="btn btn-primary btn-ghost"
								data-on-click={ fmt.Sprintf("$$clipboard('%s')", cdnText) }
							>
								@icon("material-symbols:content-copy")
							</button>
							<code
								class="flex-1 overflow-hidden text-xs text-primary text-ellipsis"
							>
								{ cdnText }
							</code>
						</div>
					</div>
				</div>
				@templ.Raw(homePageChartSVG)
				<div class="w-full shadow-xl card bg-base-100">
					<div class="card-body">
						<h2 class="card-title">Example of a dynamically loaded area of page with shared global state</h2>
						<div
							id="global-count-example"
							class="flex items-center justify-center gap-4 p-4"
							data-on-load="$$get('/api/globalCount')"
							data-fetch-indicator="'#spinner'"
						>
							<span class="text-2xl">Loading example on delay...</span>
							@icon("svg-spinners:eclipse", "id", "spinner")
						</div>
					</div>
				</div>
				<a
					class="flex items-center w-full gap-1 btn btn-primary btn-outline btn-lg"
					href={ templ.SafeURL("/guide") }
				>
					@icon("simple-icons:rocket")
					Let's Get Started!
				</a>
			</div>
		</div>
	}
}

type GlobalCountStore struct {
	Count int32 `json:"count"`
}

templ HomeGlobalCountExample(store GlobalCountStore) {
	<div
		id="global-count-example"
		class="flex flex-col gap-4"
		data-store={ templ.JSONString(store) }
	>
		<div class="flex gap-4">
			<a class="flex-1 btn btn-success" data-on-click="$count++">Increment Local +</a>
			<a class="flex-1 btn btn-error" data-on-click="$count--">Decrement Local -</a>
		</div>
		<div class="flex flex-col gap-2">
			<div data-text="`Count is ${$count % 2 === 0 ? 'even' : 'odd'}`"></div>
			<input
				class="flex-1 input input-bordered"
				type="number"
				name="count"
				data-model="count"
				data-testid="localcount_input"
			/>
		</div>
		<div class="flex gap-4">
			<a class="flex-1 btn btn-info" data-on-click="$$get('/api/globalCount')">Load global</a>
			<a class="flex-1 btn btn-warning" data-on-click="$$post('/api/globalCount')">Store global</a>
		</div>
	</div>
}
